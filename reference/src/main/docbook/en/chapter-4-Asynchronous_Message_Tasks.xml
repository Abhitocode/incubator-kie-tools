<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2011 JBoss, by Red Hat, Inc
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="sid-5833085_ReferenceGuide-AsynchronousMessageTasks">
    
    <title>Asynchronous Message Tasks</title>
    <para>
      In some applications, it may be necessary or desirable to delay transmission of, or continually stream data to a remote client or group of clients (or from a client to the server). In cases like this, you can utilize the
      <code>replyRepeating()</code>
      ,
      <code>replyDelayed()</code>
      ,
      <code>sendRepeating()</code>
      and
      <code>sendDelayed()</code>
      methods in the
      <code>MessageBuilder</code>
      .
    </para>
    <para>
      Delayed TasksSending a task with a delay is straight forward. Simply utilize the appropriate method (either
      <code>replyDelayed()</code>
      or
      <code>sendDelayed()</code>
      ).
    </para>
    <informalexample>
      <programlisting>MessageBuilder.createConversation(msg)
    .toSubject("FunSubject")
    .signalling()
    .noErrorHandling()
    .replyDelayed(TimeUnit.SECONDS, 5); // sends the message after 5 seconds.</programlisting>
    </informalexample>
    <para>or</para>
    <informalexample>
      <programlisting>MessageBuilder.createMessage()
     .toSubject("FunSubject")
     .signalling()
     .noErrorHandling()
     .sendDelayed(requestDispatcher, TimeUnit.SECONDS, 5); // sends the message after 5 seconds.</programlisting>
    </informalexample>
  </chapter>
