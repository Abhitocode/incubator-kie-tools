<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2011 JBoss, by Red Hat, Inc
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="sid-5833085_ReferenceGuide-ServletImplementations">
    
    <title>Servlet Implementations</title>
    <para>Errai has several different implementations for HTTP traffic to and from the bus. We provide a universally-compatible blocking implementation that provides fully synchronous communication to/from the server-side bus. Where this introduces scalability problems, we have implemented many webserver-specific implementations that take advantage of the various proprietary APIs to provide true asynchrony.</para>
    <para>
      These inlcuded implementations are packaged at:
      <code>org.jboss.errai.bus.server.servlet</code>
    </para>
    <section id="sid-5833085_ReferenceGuide-DefaultBlockingServlet">
      
      <title>DefaultBlockingServlet</title>
      <para>This is a universal, completely servlet spec (2.0) compliant, Servlet implementation. It provides purely synchronous request handling and should work in virtually any servlet container, unless there are restrictions on putting threads into sleep states.</para>
    </section>
    <section id="sid-5833085_ReferenceGuide-TomcatCometServlet">
      
      <title>TomcatCometServlet</title>
      <para>The Tomcat AIO implementation of our servlet allows Errai to take advantage of Tomcat's event-based AIO APIs to improve scalability and reduce thread usage. The use of this implementation is dependant on the Tomcat container being configured to support AIO using either it's NIO or APR connectors. This servlet will NOT work with the regular HTTP and AJP connectors.</para>
    </section>
    <section id="sid-5833085_ReferenceGuide-JettyContinuationsServlet">
      
      <title>JettyContinuationsServlet</title>
      <para>The Jetty implementation leverages Jetty's continuations support, which allows for threadless pausing of port connections. This servlet implementation should work without any special configuration of Jetty.</para>
    </section>
    <section id="sid-5833085_ReferenceGuide-JBossCometServlet">
      
      <title>JBossCometServlet</title>
      <para>The JBoss Comet support utilizes the JBoss Web AIO APIs (AS 5.0 and AS 6.0) to improve scalability and reduce thread usage. The HTTP, NIO, and AJP connectors are not supported. Use of this implementation requires use of the APR (Apache Portable Runtime).</para>
    </section>
    <section id="sid-5833085_ReferenceGuide-GrizzlyCometServlet">
      
      <title>GrizzlyCometServlet</title>
      <para>Support for the comet API in the Grizzy HTTP server (used in Glassfish).</para>
    </section>
    <section id="sid-5833085_ReferenceGuide-WeblogicAsyncServlet">
      
      <title>WeblogicAsyncServlet</title>
      <para>Support for the Weblogic asynchronous APIs.</para>
    </section>
  </chapter>
