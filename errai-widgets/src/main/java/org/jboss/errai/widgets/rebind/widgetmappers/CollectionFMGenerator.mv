@code{
    import java.util.*;

    getGetter = org.mvel2.util.ReflectionUtil.getGetter;
    getSetter = org.mvel2.util.ReflectionUtil.getSetter;
    getIsGetter = org.mvel2.util.ReflectionUtil.getIsGetter;

    def getType(cls) {
         return typeOracle.getType(cls.getName());
    }
        
    collectionDefaults =
        [
            getType(java.util.Set)          : "java.util.HashSet",
            getType(java.util.Collection)   : "java.util.ArrayList"
        ];

    def getDefaultCollection(colType) {
        for (t : collectionDefaults.keySet()) {
            if (t.isAssignableFrom(colType)) return collectionDefaults[t];
        }
        return null;
    };
}

if (widget.@{targetWidgetField.name} == null) {
    widget.@{targetWidgetField.name} = new @{getDefaultCollection(widgetCollectionType)}<@{widgetType.getQualifiedSourceName()}>();
}

if (widget.@{targetEntityField.name} == null) {
    throw new RuntimeException("Target field '@{targetEntityField.name}' is null");
}

if (widget.@{targetEntityField.name}.@{getGetter(targetEntityMember.name)}() == null) {
    throw new RuntimeException("Target field '@{targetEntityField.name}.@{targetEntityMember.name}' is null");
}

final org.jboss.errai.widgets.client.mapping.FieldMapper<@{widgetType.getQualifiedSourceName()}, @{widgetType.getQualifiedSourceName()}, @{entityCollectionType.getQualifiedSourceName()}> @{varName} =
        new org.jboss.errai.widgets.client.mapping.FieldMapper<@{widgetType.getQualifiedSourceName()}, @{widgetType.getQualifiedSourceName()}, @{entityCollectionType.getQualifiedSourceName()}>() {
             public @{widgetType.getQualifiedSourceName()} getFieldValue(@{widgetType.getQualifiedSourceName()} w, @{entityCollectionType.getQualifiedSourceName()} value) {
                for (@{widgetType.getQualifiedSourceName()} wld : widget.@{targetWidgetField.getName()}) {
                    @eval{org.jboss.errai.widgets.rebind.widgetmappers.ColMappers.getMapper(widgetType.getQualifiedSourceName()).generateGetField(typeOracle,targetEntityField.getType().isClassOrInterface())}
                }

                return w;
             }

             public void setFieldValue(@{widgetType.getQualifiedSourceName()} w, @{entityCollectionType.getQualifiedSourceName()} value) {
                for (@{widgetType.getQualifiedSourceName()} wld : widget.@{targetWidgetField.getName()}) {
                     @eval{org.jboss.errai.widgets.rebind.widgetmappers.ColMappers.getMapper(widgetType.getQualifiedSourceName()).generateSetField(typeOracle,targetEntityField.getType().isClassOrInterface())}
                }
             }

        };

for (final @{widgetType.getQualifiedSourceName()} wld : widget.@{targetWidgetField.getName()}) {
   @eval{org.jboss.errai.widgets.rebind.widgetmappers.ColMappers.getMapper(widgetType.getQualifiedSourceName()).generateValueChange(typeOracle,targetEntityField.getType().isClassOrInterface())}
}