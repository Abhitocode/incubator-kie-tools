@comment{

Copyright 2009 JBoss, a divison Red Hat, Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.                                            

     # This class is used to generate the marshaller code used by the ErraiBus
     # serialization engine.

}@declare{'extractor'}\"@{fieldName}\":").append(jsonEncoder.encode(o.@{getter}, ctx)).append("@end{}
org.jboss.errai.common.client.types.TypeMarshallers.addMarshaller(
    @{className}.class,
    new org.jboss.errai.common.client.types.Marshaller<@{className}>() {
        public String marshall(@{className} o, org.jboss.errai.common.client.types.EncodingContext ctx) {
            if (ctx.isEncoded(o)) return "{\"@{org.jboss.errai.common.client.protocols.SerializationParts.ENCODED_TYPE}\":\"@{canonicalClassName}\",\"@{org.jboss.errai.common.client.protocols.SerializationParts.OBJECT_ID}\":\"$" + ctx.markRef(o) + "\"}";

            try {
@if{enumType}StringBuilder json = new StringBuilder("{\"@{org.jboss.errai.common.client.protocols.SerializationParts.ENCODED_TYPE}\":\"@{canonicalClassName}\",EnumStringValue:\"");
                json.append(o.toString()).append("\"}");@else{}
                ctx.markEncoded(o);
                StringBuilder json = new StringBuilder("{\"@{org.jboss.errai.common.client.protocols.SerializationParts.ENCODED_TYPE}\":\"@{canonicalClassName}\",\"@{org.jboss.errai.common.client.protocols.SerializationParts.OBJECT_ID}\":\"" + o.hashCode() + "\"");
                @if{!fields.isEmpty()}
                json.append(",");
                org.jboss.errai.common.client.json.JSONEncoderCli jsonEncoder = new org.jboss.errai.common.client.json.JSONEncoderCli();
                json.append("@foreach{fieldName : fields}@includeNamed{"extractor";fieldName=fieldName;targetType=targetTypes.get(fieldName);getter=getters.get(fieldName)}@end{","}}");
                return json.toString();
                @else{}
                return json.append("}").toString();
                @end{}
                @end{}
            }
            catch (Exception e) {
                System.out.println("o=" + o + ";ctx=" + ctx);
                e.printStackTrace();
                return null;
            }
        }
    }
);