<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook V4.2//EN" "../docbookV4.2/docbookx.dtd">
<chapter id="quickstart">
    <title>Appendix A: Quickstart</title>
    <section id="quickstart-intro">
        <title>Using the maven archetype</title>
        <para>
            If you have taken a look at the examples that ship with the distribution,
            you realized that we use maven to build them. The way it is setup, the maven build
            has several benefits:

            <itemizedlist>
                <listitem>It pulls the GWT from a central repository. No need for manual installation of the SDK
                </listitem>
                <listitem>It provides us with the proper dependencies in order to run the examples</listitem>
                <listitem>IDE setup is greatly simplfied, since most modern IDE's can directly import the maven
                    structure
                </listitem>
            </itemizedlist>

            In order to get you going quickly, we've provided a project archetype, that allows you
            to create a project skeleton similiar to the one we use for building the examples.
            It's based on the maven archetype plugin
            <footnote>http://maven.apache.org/plugins/maven-archetype-plugin/</footnote>
            and needs to be invoked from the command line:

            <programlisting>
                #/bin/sh
                mvn -U archetype:generate \
                -DarchetypeGroupId=org.jboss.errai \
                -DarchetypeArtifactId=sandbox-archetype \
                -DarchetypeVersion=1.0-SNAPSHOT \
                -DarchetypeRepository=http://snapshots.jboss.org/maven2
            </programlisting>

            When invoking the archetype build it ask you about the maven groupId, artifactId and package
            name your GWT application should use:

            <programlisting>
                Define value for groupId: : foo.bar
                Define value for artifactId: : gwt-app
                Define value for version: 1.0-SNAPSHOT: :
                Define value for package: foo.bar: : foo.bar.ui
                Confirm properties configuration:
                groupId: foo.bar
                artifactId: gwt-app
                version: 1.0-SNAPSHOT
                package: foo.bar.ui
                Y: : Y
            </programlisting>

            What will be created for you, is a maven build structure, including references to the GWT SDK
            and the Errai dependencies necessary to launch a simple application:

            <programlisting>
                Laika:test hbraun$ cd gwt-app/
                Laika:gwt-app hbraun$ lstree
                |-src
                |---main
                |-----java
                |-------foo
                |---------bar
                |-----------client
                |-----------server
                |-war
                |---WEB-INF
            </programlisting>

            In order launch the GWT hosted mode, change into the project directory
            and type:
            <programlisting>
                mvn gwt:run
            </programlisting>

            The default project includes both a HelloWorld client (GWT), and a HelloWorld service.
        </para>
    </section>
</chapter>